using Android.App;
using Android.Widget;
using Android.OS;
using System.Threading.Tasks;
using Org.Apache.Http.Client;
using System.Net.Mail;
using System.Collections.Generic;
using Newtonsoft.Json;
using System.Net.Http;
using Newtonsoft.Json.Linq;
using Org.Json;
using Android.Content;
using FreeClub;
using System;
using System.Net.Http.Headers;
using System.Text;
using System.Net;
using System.IO;

namespace App1
{
    [Activity(Label = "Events", MainLauncher = false, Icon = "@drawable/icon")]
    public class MainActivity : Activity
    {
        
        private ListView listView;
        protected async override void OnCreate(Bundle bundle)
        {
            base.OnCreate(bundle);
            SetContentView(Resource.Layout.Events);
            string Email = "med@gmail.com";
            string password = "Azerty(123)";

            /*ASCIIEncoding encoding = new ASCIIEncoding();
            string PostData = "Email=" + Email + "&&Password=" + password;
            Byte[] data = encoding.GetBytes(PostData);
            WebRequest request = WebRequest.Create("http://192.168.241.187:63835/Account/Login");
            request.Method = "Post";
            request.ContentType = "application/x-www-form-urlencoded";
            request.ContentLength = data.Length;
            Stream stream = request.GetRequestStream();
            stream.Write(data, 0, data.Length);
            stream.Flush();*/
            var httpClient = new HttpClient();
            string resourceAddress = "http://192.168.241.187:63835/Account/Login";
            Client authentificatedClient = new Client
            {
                Email = "med@gmail.com",
                Password = "Azerty(123)",
                RememberMe = true
            };

            dynamic model = new
            {
                model = authentificatedClient,
                returnUrl = "hello"
            };
            
            HttpContent content = new FormUrlEncodedContent(
                new List<KeyValuePair<string, string>> {
                  new KeyValuePair<string, string>("Email", Email),
                  new KeyValuePair<string, string>("Password", password),
                  new KeyValuePair<string, string>("RememberMe", "true")
        });

            var client = new HttpClient();
            content.Headers.ContentType = new MediaTypeHeaderValue("application/x-www-form-urlencoded");
            content.Headers.ContentType.CharSet = "UTF-8";
            HttpResponseMessage resposne = await client.PostAsync(new Uri("http://192.168.241.187:63835/Account/Login/"), content);
            
            /*string postBody = JsonConvert.SerializeObject(aya);
            httpClient.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            HttpResponseMessage response = await httpClient.PostAsync(resourceAddress, new StringContent(postBody, Encoding.UTF8, "application/json"));
            // call sync*/

            
            var json = await client.GetStringAsync("http://192.168.241.187:63835/api/events");
            var taskModels = JsonConvert.DeserializeObject<List<Event>>(json);
            DateTime date = DateTime.Today;
            List<string> eventss = new List<string>();
            foreach (Event ev in taskModels)
            {
                string eve = ev.Name + "\n" + ev.Date;
                eventss.Add(eve);
            }
            /*byte[] ima = taskModels[0].Ima;
            ImageView image = FindViewById<ImageView>(Resource.Id.image);
            Android.Graphics.Bitmap bmp = await Android.Graphics.BitmapFactory.DecodeByteArrayAsync(ima, 0, 1000000);
            image.SetImageBitmap(bmp);*/
            listView = FindViewById<ListView>(Resource.Id.MyList);
            ArrayAdapter<string> adapter = new ArrayAdapter<string>(this, Android.Resource.Layout.SimpleListItem1, eventss);
            listView.Adapter = adapter;
            for (int i = 0; i < eventss.Count; i++)
            {

            }
            ImageButton home = FindViewById<ImageButton>(Resource.Id.IB1);
            ImageButton events = FindViewById<ImageButton>(Resource.Id.IB2);
            ImageButton history = FindViewById<ImageButton>(Resource.Id.IB3);
            ImageButton vote = FindViewById<ImageButton>(Resource.Id.IB4);
            ImageButton partage = FindViewById<ImageButton>(Resource.Id.IB5);
            ImageButton deco = FindViewById<ImageButton>(Resource.Id.IB6);
            home.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(Home));
                StartActivity(nextAct);
            };
            vote.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(Vote));
                StartActivity(nextAct);
            };
            partage.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(Partage));
                StartActivity(nextAct);
            };
            vote.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(Vote));
                StartActivity(nextAct);
            };
            history.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(History));
                StartActivity(nextAct);
            };
            deco.Click += delegate
            {
                this.Finish();
                Intent nextAct = new Intent(this, typeof(Auth));
                StartActivity(nextAct);
            };
            listView = FindViewById<ListView>(Resource.Id.MyList);
            void listViewItemClick(object sender, AdapterView.ItemClickEventArgs e)
            {
                Intent nextAct = new Intent(this, typeof(Detail));
                nextAct.PutExtra("name", taskModels[e.Position].Name);
                nextAct.PutExtra("date", taskModels[e.Position].Date.ToString());
                nextAct.PutExtra("description", taskModels[e.Position].Description);
                nextAct.PutExtra("Lien", taskModels[e.Position].Lien);
                StartActivity(nextAct);
            }
            listView.ItemClick += listViewItemClick;


            
            //stream.Close();
        }


    }
}

